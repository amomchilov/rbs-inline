module RBS
  module Inline
    module AST
      module Declarations
        type t = ClassDecl

        module ConstantUtil
          def type_name: (Prism::Node) -> TypeName?
        end

        class Base
        end

        class ClassDecl < Base
          include ConstantUtil

          attr_reader node: Prism::ClassNode

          attr_reader members: Array[Members::t | t]

          attr_reader comments: AnnotationParser::ParsingResult?

          def initialize: (Prism::ClassNode, AnnotationParser::ParsingResult?) -> void

          %a{pure} def class_name: () -> TypeName?

          %a{pure} def super_class: () -> TypeName?
        end
      end
    end
  end
end
